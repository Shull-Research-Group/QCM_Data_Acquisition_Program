#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrartcl
\begin_preamble
\usepackage{pdfsync}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf2
\output_sync 1
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=blue"
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 0.5in
\topmargin 0.5in
\rightmargin 0.5in
\bottommargin 0.5in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
sloppy
\end_layout

\end_inset


\end_layout

\begin_layout Title
QCM MATLAB Program Manual
\end_layout

\begin_layout Subtitle
The Shull Research Group 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset

Version 2.0e 
\begin_inset Quotes eld
\end_inset

Eurynomos
\begin_inset Quotes erd
\end_inset

 and beyond
\end_layout

\begin_layout Date
Updated on 07/07/16
\end_layout

\begin_layout Author
Chyi-Huey Joshua Yeh
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Part
Quickstart Guide
\end_layout

\begin_layout Section
Installation
\end_layout

\begin_layout Subsection
Installing MyVNA program
\end_layout

\begin_layout Standard
The MyVNA program is a software that was devloped by the original harware
 designers of the N2PK Vector Network Analyzer (N2PK-VNA).
 This program directly manipulates the N2PK-VNA.
 For more information on the MyVNA program and the N2PK-VNA hardware setup,
 visit http://g8kbb.co.uk/html/myvna.html.
 Also, there is a small active community of radio-enthusiasts that constantly
 improve the software and harware design and capabilites of the N2PK-VNA.
 For more information on this community, visit https://groups.yahoo.com/neo/groups
/N2PK-VNA/info.
\end_layout

\begin_layout Subsubsection
Step-by-step myVNA installation
\begin_inset CommandInset label
LatexCommand label
name "subsec:Step-by-step-myVNA-installation"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Open up the folder name, 
\begin_inset Quotes eld
\end_inset

myVNA setup files
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate

\series bold
Run myVNA.msi and follow the directions.

\series default
 This installs the myVNA program that directly communicates and controls
 the N2PK Vector Network Analyzer (imepdance analyzer).
\end_layout

\begin_layout Enumerate

\series bold
After installing myVNA, double click on myVNA_setup.reg.

\series default
 This adds registry values associated with the myVNA program.
\end_layout

\begin_layout Enumerate

\series bold
Go to the folder in which the myVNA program is installed.
 
\series default
The path usually looks something like this: C:
\backslash
Program Files (x86)
\backslash
G8KBB
\backslash
myVNA.
\end_layout

\begin_layout Enumerate

\series bold
In this folder, make sure that there is a file name, 
\begin_inset Quotes eld
\end_inset

InitGenericUsb.dll
\begin_inset Quotes erd
\end_inset

.
 
\series default
If not, go to the 
\begin_inset Quotes eld
\end_inset

USB configure and Drivers
\begin_inset Quotes erd
\end_inset

 folder, located in the same path directory asthe myVNA program and copy
 the file, 
\begin_inset Quotes eld
\end_inset

InitGenericUsb.dll
\begin_inset Quotes erd
\end_inset

 into the myVNA path directory.
 This file is reponsible for communicating with the N2PK Vector Network
 Analyzer via a usb cord.
\end_layout

\begin_layout Enumerate

\series bold
In the myVNA program path directory, search for the file name, 
\begin_inset Quotes eld
\end_inset

RegServers.exe
\begin_inset Quotes erd
\end_inset

, right click on it, and click on 
\begin_inset Quotes eld
\end_inset

Run as administrator
\begin_inset Quotes erd
\end_inset

.
 
\series default
It is important that you run that execution file with administrator rights,
 otherwise, the execution file will not run properly.
 This file is responsible for registering the myVNA program with OLE capabilites.
 In other words, this file allows the MyVNA program to be controlled remotely
 with a 3rd-party program (in this case, AccessMyVNA).
\end_layout

\begin_layout Enumerate

\series bold
On the right hand panel in the MyVNA software, click on 
\begin_inset Quotes eld
\end_inset

VNA Hardware
\begin_inset Quotes erd
\end_inset

.
 Double click on 
\begin_inset Quotes eld
\end_inset

Choose CDS/Harmonic mode
\begin_inset Quotes erd
\end_inset

.
 A window will appear; make sure 
\begin_inset Quotes eld
\end_inset

Basic Mode
\begin_inset Quotes erd
\end_inset

 is selected.
 
\series default
Doing this will significantly increase the scan speed of the Network Analyzer.
 To the best of knowledge, differences between the 
\begin_inset Quotes eld
\end_inset

Basic Mode
\begin_inset Quotes erd
\end_inset

 and the 
\begin_inset Quotes eld
\end_inset

Harmonic Suppression Mode
\begin_inset Quotes erd
\end_inset

 is negligible (besides the difference in scan speed).
\end_layout

\begin_layout Enumerate

\series bold
When myVNA program has been successfully installed, connect the N2PK VNA
 to the computer.

\series default
 The computer will automatically start scanning for the appropriate drivers
 to download and install, in order to interface with the N2PK VNA.
 It is not necessary for the computer to go through this process (canceling
 this process will not affect the driver installation), since the associated
 drived will be installed manually.
 Go to Control Panel>View devices and printers.
 Scroll down and right click 
\begin_inset Quotes eld
\end_inset

Unknown device
\begin_inset Quotes erd
\end_inset

.
 From there, the driver can be manually installed by directing Windows to
 look into the folder in which the myVNA program was installed.
 Make sure 
\begin_inset Quotes eld
\end_inset

Check subfolder
\begin_inset Quotes erd
\end_inset

 option is checked.
\end_layout

\begin_layout Enumerate

\series bold
When running myVNA for the first time, a message will display, saying that
 the 
\begin_inset Quotes eld
\end_inset

Calibration
\begin_inset Quotes erd
\end_inset

 file was not found.
 
\series default
Click 
\begin_inset Quotes eld
\end_inset

OK
\begin_inset Quotes erd
\end_inset

; the GUI will initialize.
 The first thing to do is to calibrate the N2PK VNA.
 Go to 
\begin_inset Quotes eld
\end_inset

Calibration Options
\begin_inset Quotes erd
\end_inset

 (left panel) and turn on the 
\begin_inset Quotes eld
\end_inset

Unguided Calibration
\begin_inset Quotes erd
\end_inset

 option.
 On the top toolbar, set the start and end frequency to 4 MHz and 56 MHz.
 Make sure the units are set to 
\begin_inset Quotes eld
\end_inset

MHz
\begin_inset Quotes erd
\end_inset

 and that the 
\begin_inset Quotes eld
\end_inset

Start/Stop
\begin_inset Quotes erd
\end_inset

 setting is selected.
 Also, change the number of setps to 400 and the average to 3.
 Click on the 
\begin_inset Quotes eld
\end_inset

Calibrate
\begin_inset Quotes erd
\end_inset

 button, located at the top toolbar.
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/Calibration01.png
	lyxscale 50
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Set up te calibration process.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Make sure that the N2PK VNA is in an open-circuit state.
 Click on the 
\begin_inset Quotes eld
\end_inset

Open
\begin_inset Quotes erd
\end_inset

 button.
 The program will perform a scan from 4 MHz to 56 MHz with 4000 datapoints
 in between.
 Once this is finished, connect the 
\begin_inset Quotes eld
\end_inset

short
\begin_inset Quotes erd
\end_inset

 to the N2PK VNA, and click on the 
\begin_inset Quotes eld
\end_inset

Short
\begin_inset Quotes erd
\end_inset

 button.
 Repeat this step with the 50 
\begin_inset Formula $\Omega$
\end_inset

 resistor and click on the 
\begin_inset Quotes eld
\end_inset

Load
\begin_inset Quotes erd
\end_inset

 button.
 Once the calibration is finished, click on the the 
\begin_inset Quotes eld
\end_inset

Finished
\begin_inset Quotes erd
\end_inset

 button and save the calibration file.
 
\end_layout

\begin_layout Enumerate
The myVNA program should fully functioning.
 To test it, simply click on the 
\begin_inset Quotes eld
\end_inset

Single Scan
\begin_inset Quotes erd
\end_inset

 button on the top toolbar.
 The 
\begin_inset Quotes eld
\end_inset

Autoscale
\begin_inset Quotes erd
\end_inset

 button might need to be pressed in order to adjust the plot to show the
 measurement.
 Once everything has been tested and properly set-up, exit out of myVNA.
\end_layout

\begin_layout Standard

\series bold
Note:
\series default
 It is good practice re-calibrate before an experiment.
 This will reduce any unneccessay complication associated with the Lorentzian
 fitting process QCM measurement.
\end_layout

\begin_layout Subsection
Installing AccessMyVNAv0.7 program
\end_layout

\begin_layout Standard
Setting up this program is easy.
 All that is required is to ensure that the folder, 
\begin_inset Quotes eld
\end_inset

AccessMyVNAv0.7
\begin_inset Quotes erd
\end_inset

, is in the same directory as the QCM MATLAB Program.
 For example, if the path directory to the QCM MATLAB Program is <C:
\backslash
Program Files (x86)
\backslash
QCM MATLAB Program>, make sure that <C:
\backslash
Program Files (x86)
\backslash
QCM MATLAB Program
\backslash
AccessMyVNAv0.7> exists.
 This folder contains the program, AccessMyVNA, that is important for the
 QCM MATLAB Program to (indirectly) manipulate the MyVNA program.
 Currently, the QCM MATLAB Program automatically executes the AccessMyVNA
 each time the QCM MATLAB Program initiates and creates the GUI figure.
 However, to manually execute the AccessMyVNA program, the 
\begin_inset Quotes eld
\end_inset

AccessMyVNA.exe
\begin_inset Quotes erd
\end_inset

 file can be found in the 
\begin_inset Quotes eld
\end_inset

release
\begin_inset Quotes erd
\end_inset

 folder in the AccessMyVNAv0.7 folder.
\end_layout

\begin_layout Standard
Make sure to install the necessary .dll files.

\series bold
 
\series default
To do this, simply run execution file located in the 
\begin_inset Quotes eld
\end_inset

Visual C++ redistributable packages for visual basic 2013
\begin_inset Quotes erd
\end_inset

 folder.
 If the installation is being performed on a 32-bit computer, run the 
\begin_inset Quotes eld
\end_inset

vcredist_x86(1).exe
\begin_inset Quotes erd
\end_inset

 file.
 If the installation is being performed on a 64-bit computer, run the 
\begin_inset Quotes eld
\end_inset

vcredist_x64(1).exe
\begin_inset Quotes erd
\end_inset

 file.
 If an error message appears, (when executing the AccessMyVNA.exe file) stating
 that a .dll file is missing, try running both the 32-bit and 64-bit execution
 files.
\end_layout

\begin_layout Standard
For those running the 
\begin_inset Quotes eld
\end_inset

AccessMyVNAv0.7
\begin_inset Quotes erd
\end_inset

 on Windows 8 or higher, 
\series bold
make sure to change the compatability mode of the 
\begin_inset Quotes eld
\end_inset

AccessMyVNAv0.7.exe
\begin_inset Quotes erd
\end_inset

 to Windows 7
\series default
.
 Otherwise, the program will unexpectedly crash or malfunction.
\end_layout

\begin_layout Subsubsection
Note for code developers
\end_layout

\begin_layout Standard
Within the AccessMyVNAv0.7 folder, there are many other folders and files.
 These 
\begin_inset Quotes eld
\end_inset

extra
\begin_inset Quotes erd
\end_inset

 folders and files are needed if there is a need to edit the AccessMyVNAv0.7
 program code.
 To access this code, Visual Basic C++ (2013 or higher) must be installed.
 The file, 
\begin_inset Quotes eld
\end_inset

AccessMyVNA.sln
\begin_inset Quotes erd
\end_inset

, can be opened with Visual Basic C++ and the file, AccessMyVNADlg.cpp, can
 be accessed in the solution explorer panel.
 It is within the AccessMyVNADlg.cpp in which most of the important features
 and functions of the AccessMyVNAv0.7 is defined.
 Ideally, this program should be rewritten.
 However, rewriting this program requires advanced knowledge and experience
 in working with Visual Basic C++.
 In particular, this program relies on 
\begin_inset Quotes eld
\end_inset

MFC
\begin_inset Quotes erd
\end_inset

 (Microsoft Foundation Class) libraries, which are only supported in Visual
 Basic Professional 2013 or higher (not the 
\begin_inset Quotes eld
\end_inset

Express
\begin_inset Quotes erd
\end_inset

 version!).
 A free student license of Visual Basic Professional 2013 (or higher) can
 be obtained from Microsoft's Dreamspark program.
\end_layout

\begin_layout Subsection
Installing the QCM MATLAB Program
\end_layout

\begin_layout Standard
The QCM MATLAB Program does not require any formal installation.
 However, make sure the program is performed by MATLAB 2014b or higher.
 Make sure that the following files:
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

QCM_v002e_Eurynomos.m
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

QCM_v002e_Eurynomos.fig
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

fg_values.mat
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

raw_spectras.mat
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
are in the <C:
\backslash
Program Files (x86)
\backslash
QCM MATLAB Program
\backslash
> path directory.
 Also, make sure the following folders are located in the <C:
\backslash
Program Files (x86)
\backslash
QCM MATLAB Program
\backslash
> path directory:
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

QCM MATLAB manual
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

email files
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

AccessMyVNAv0.7
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

deleted data
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Note that the filenames and folder names are case sensitive.To run the QCM
 MATLAB Program, double click on the 
\begin_inset Quotes eld
\end_inset

QCM_v002b_bigfoot.m
\begin_inset Quotes erd
\end_inset

 file and run the script.
 As aforementioned, the AccessMyVNA program should also start with the creation
 of the MATLAB GUI figure.
 If it did not, an error should be reflected in the MATLAB command window.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
How to take measurements (Quickstart guide)
\end_layout

\begin_layout Subsection
Starting up and closing down the programs
\end_layout

\begin_layout Standard

\series bold
\emph on
\bar under
NOTE:
\series default
\emph default
\bar default
 The GUI window associated with the 
\begin_inset Quotes eld
\end_inset

AccessMyVNA
\begin_inset Quotes erd
\end_inset

 will no longer appear for versions 2.0c and higher.
 Instead, this program runs in the background.
 A toggle button, 
\begin_inset Graphics
	filename Figures/myvna_button.png

\end_inset

, runs and closes the program using the Windows system cmd commands.
 The execution process, 
\begin_inset Quotes eld
\end_inset

AccessMyVNA.exe
\begin_inset Quotes erd
\end_inset

, can be located in the windows task manager.
 The native program, 
\begin_inset Quotes eld
\end_inset

MyVNA
\begin_inset Quotes erd
\end_inset

 will automatically run and be minimized on the desktop toolbar.
 Changes associated with the number of average scans should be adjusted
 in the 
\begin_inset Quotes eld
\end_inset

MyVNA
\begin_inset Quotes erd
\end_inset

 native program.
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
<THIS SECTION IS DEPRECATED FOR VERSION 002e AND HIGHER> To start up the
 QCM MATLAB program (and the other programs, a.k.a.
 MyVNA and AccessMyVNA), run the 
\begin_inset Quotes eld
\end_inset

QCM_v001a.m
\begin_inset Quotes erd
\end_inset

 script.
 An instance of the AccessMyVNA program should appear along with the creation
 of the MATLAB GUI figure.
 In the AccessMyVNA window, click on the button, 
\begin_inset Quotes eld
\end_inset

Start Scan
\begin_inset Quotes erd
\end_inset

 (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:AccessMyVNA Start Button"

\end_inset

).
 This will automatically start up the MyVNA program and begin (continuous)
 scans.
 Note that when the AccessMyVNA program is continuously scanning, the program
 cannnot be minimized and may seem unresponsive.
 As long the AccessMyVNA program is telling the myVNA program to continue
 scanning, the AccessMyVNA program is still running correctly.
 
\end_layout

\begin_layout Standard
<THIS SECTION IS DEPRECATED FOR VERSION 002e AND HIGHER>To have AccessMyVNA
 program to stop scanning, simply go to the radio dial labelled, 
\begin_inset Quotes eld
\end_inset

Maintain myVNA scan
\begin_inset Quotes erd
\end_inset

, and uncheck the radio dial.
 This will communicate to the AccessMyVNA program to stop scanning (this
 process may take a few seconds to complete).
 If the program does not stop scanning, then the AccessMyVNA program is
 probably malfunctioning.
 In that case, the AccessMyVNA program may have to be terminated in the
 windows task manager.
 
\series bold
To begin the continous scanning again, make sure that the radiodial, 
\begin_inset Quotes eld
\end_inset

Maintain myVNA scan
\begin_inset Quotes erd
\end_inset

 is checked and click on the 
\begin_inset Quotes eld
\end_inset

Start Scan
\begin_inset Quotes erd
\end_inset

 button in the AccessMyVNA window.

\series default
 Also, note that when the MATLAB GUI figure is closed, the QCM MATLAB code
 will communicate the AccessMyVNA to stop scanning.
 However, the 
\series bold
AccessMyVNA program and the
\series default
 
\series bold
MyVNA program needs to be manually closed
\series default
.
 If the AccessMyVNA program is not manually closed, reinitiating the QCM
 MATLAB GUI figure will create a new instance of AccessMyVNA; thus, there
 will be multiple instances of AccessMyVNA running at the same time, which
 can cause fatal errors.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/Start_scan_AccessMyVNA.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Click on the 
\begin_inset Quotes eld
\end_inset

Start Scan
\begin_inset Quotes erd
\end_inset

 button in the AccessMyVNA program to begin scanning.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:AccessMyVNA Start Button"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Setting up parameters and measurement options
\end_layout

\begin_layout Standard
Parameters, settings, and options related to the collecting scans from the
 N2PK-VNA impedance analyzer can be controlled from the settings panel (see
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:settings panel"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/settings panel.png
	lyxscale 40
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The settings panel contains information on the parameters, settings, and
 options related to the collection of the raw data.
\begin_inset CommandInset label
LatexCommand label
name "fig:settings panel"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Choosing which harmonic to track
\end_layout

\begin_layout Standard
The N2PK-VNA impedance analyzer is capable of tracking up to 6 harmonics
 at the same time (1st, 3rd, 5th, 7th, 9th, 11th harmonics).
 To choose which harmonics to track, check/uncheck the radio dials on the
 
\begin_inset Quotes eld
\end_inset

Harmonics
\begin_inset Quotes erd
\end_inset

 column (see Figure).
 The start and end frequencies of the scan for each of the harmonic can
 be set manually by editing the numbers in the corresponding start/end frequenci
es.
 Also, the start and end frequencies can be set by initiating the 
\begin_inset Quotes eld
\end_inset

Peak Centering Mode
\begin_inset Quotes erd
\end_inset

.
 For more details in regards to the Peak Centering Mode, refer to Part 1,
 Section 3.1.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/choose harmonics.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Multiple harmonics can be tracked.
 Choose which harmonics to track by checking/unchecking the radio dials
 under the 
\begin_inset Quotes eld
\end_inset

Harmonics
\begin_inset Quotes erd
\end_inset

 column.
 The start and end frequencies of the scan can be set for each harmonic.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Spectra refresh resolution
\end_layout

\begin_layout Standard
This option in the 
\begin_inset Quotes eld
\end_inset

Settings Panel
\begin_inset Quotes erd
\end_inset

 controls how often the QCM MATLAB Program refreshes the raw conductance
 and/or susceptance spectras.
 Its default value is 1, which means that the MATLAB program will refresh
 the spectras each time it reads in data from the datafile (see Part 2 for
 a more thorough explanation on how the QCM MATLAB Program reads data from
 the impedance analyzer).
 Changing this number to a higher integer-value can potentially increase
 the time resolution of the measurements significantly, since it takes a
 finite amount of time for MATLAB to constantly refresh the spectral plots.
 For example, a spectra refresh resolution of 10 means that the MATLAB prgram
 will refresh the plots every 10th measurement it collects.
\end_layout

\begin_layout Subsubsection
Reference time
\end_layout

\begin_layout Standard
Since this programs collects frequency and dissipation shifts as a function
 of time, having a reference time is important, especially if new data needs
 to be appended onto another dataset from a previous experiment.
 The default reference time is set to the time in which the QCM MATLAB GUI
 figure was initiated.
 The reference time can also be changed manually by editting the values
 in the text box.
 Make sure that the values are in the correct format, yy:mm:dd:HH:MM:SS:FFF,
 where yy, mm, dd, MM, SS, and FFF, represent the last two digits of the
 year, the month, the day, the hour (24-hour format), the minutes, the seconds,
 and the milliseconds, respectively.
 
\series bold
Do not hit the 
\begin_inset Quotes eld
\end_inset

Reset Reference Time
\begin_inset Quotes erd
\end_inset

 button after editing the reference time.
 Clicking on the 
\begin_inset Quotes eld
\end_inset

Reset Reference Time
\begin_inset Quotes erd
\end_inset

 will set the reference time to the current time! Simply hit the 
\begin_inset Quotes eld
\end_inset

Enter
\begin_inset Quotes erd
\end_inset

 key after inputting your desired reference time.
\end_layout

\begin_layout Subsubsection
Time between harmonics
\end_layout

\begin_layout Standard
This option controls the amount of time (in milliseconds) in between each
 harmonic measurements.
 In general, it is not neccesary to change this value.
 
\series bold
A short time can lead to synchronization and systematic errors.
 
\series default
If the resonance peaks in the spectra looks odd or abnormal, increasing
 the amount of time in between each harmonic measurement might solve the
 problem.
 Otherwise, it might be due to other errors (see the Troubleshooting section).
 An example of what a resonance peak looks like if there is not sufficient
 amount of time in between harmonics is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:unsynchronized peak"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/not synchronized peak.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
An abnormal resonance peak (5MHz) due to insufficient amount of time in
 between harmonics.
 Increase the time in between each harmonic measurement to solve this problem.
\begin_inset CommandInset label
LatexCommand label
name "fig:unsynchronized peak"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Number of datapoints
\end_layout

\begin_layout Standard
The number of datapoints in each frequency scan can be adjusted.
 The default value is 300 datapoints.
 Note that increasing the number of datapoints will require more time in
 between harmonics.
 Thus, the time in between haronics need to be adjusted accordingly.
 
\series bold
A good rule of thumb is to allow 4-6 ms for each datapoint.
\end_layout

\begin_layout Subsubsection
\begin_inset Quotes eld
\end_inset

Record data every _ s
\begin_inset Quotes erd
\end_inset

 option
\end_layout

\begin_layout Standard
The time interval in which the QCM MATLAB Program records the spectra measure
 can be set in this option.
 For experiments that last for days to weeks, it is more practical to increase
 the time interval in which the MATLAB program records the data.
 Currently, the MATLAB program allows for 25000 timepoints to be recorded.
 If more than one million datapoints are collected, an error will appear
 and terminate the data collection process.
 The maximum number of datapoints to keep can be adjusted in the MATLAB
 code.
 However, it should be noted that the MATLAB program will progressively
 slow down as more data is being collected since it will take longer for
 MATLAB to append new values and variables into the output 
\begin_inset Quotes eld
\end_inset

.mat
\begin_inset Quotes erd
\end_inset

 files.
 For all practical purposes, this should not be an issue.
 If it is an issue, the output files should be split up into multiple files
 to mitigate this effect.
\end_layout

\begin_layout Standard
For experiments that are on a short time scale, it is important to remember
 that the number of datapoints and time in between harmonics need to be
 adjusted accordingly before decreasing the recording time interval.
 Otherwise, duplicates of the same spectra will be recorded.
 
\series bold
In other words, if the recording time interval is less than the time in
 between harmonics, duplicates of the same spectra will be recorded.
 
\series default
An example of this systematic error is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:duplicate datapoint"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/duplicate datapoints.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
If the recording time interval is less than the time in between harmonics,
 duplicates of datapoints will occur.
 This is evident if the freqeuncy shift plot is observed during the measurement
 process.
\begin_inset CommandInset label
LatexCommand label
name "fig:duplicate datapoint"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Fitting options
\end_layout

\begin_layout Standard
There are five radio-dials in the 
\begin_inset Quotes eld
\end_inset

Fitting Options
\begin_inset Quotes erd
\end_inset

 panel (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:fitting options"

\end_inset

): 
\begin_inset Quotes eld
\end_inset

Dynamic Fit
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Fit Susceptance
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Show Xsq parameter
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Show susceptance
\begin_inset Quotes erd
\end_inset

, and 
\begin_inset Quotes eld
\end_inset

Show polar plot
\begin_inset Quotes erd
\end_inset

.
 If the 
\begin_inset Quotes eld
\end_inset

Dynamic Fit
\begin_inset Quotes erd
\end_inset

 radiodial is checked, a Lorentzian function curve fitting algorithm will
 be used to fit the resonance conductance peaks each time a spectra is collected.
 Unchecking this option significantly decreases the time required to record
 a measured spectra, which may be of importance if recording fast scans
 are required in an experiment.
 If the 
\begin_inset Quotes eld
\end_inset

Fit Susceptance
\begin_inset Quotes erd
\end_inset

 radiodial is checked along with the 
\begin_inset Quotes eld
\end_inset

Dynamic Fit
\begin_inset Quotes erd
\end_inset

 radio dial, both the conductance and susceptance resonance curves will
 be fitted.
 Note that the additional step of fitting the susceptance curve will require
 more time to record a measured spectra.
 If the 
\begin_inset Quotes eld
\end_inset

Show Xsq parameter
\begin_inset Quotes erd
\end_inset

 radiodial is checked along with the 
\begin_inset Quotes eld
\end_inset

Dynamic Fit
\begin_inset Quotes erd
\end_inset

 radiodial, the 
\begin_inset Formula $\chi^{2}$
\end_inset

 parameter for each fit will be calculated and recorded.
 Details in regards to calculating goodness-of-fit for the curve fitting
 process is discuseed in later sections.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/fitting options.png
	lyxscale 60
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Options related to the fitting process during the measurements can be adjusted
 in the 
\begin_inset Quotes eld
\end_inset

Fitting Options
\begin_inset Quotes erd
\end_inset

 section located in the 
\begin_inset Quotes eld
\end_inset

Settings
\begin_inset Quotes erd
\end_inset

 panel.
\begin_inset CommandInset label
LatexCommand label
name "fig:fitting options"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Formatting output file
\end_layout

\begin_layout Standard
In the 
\begin_inset Quotes eld
\end_inset

Format Output File
\begin_inset Quotes erd
\end_inset

 panel, there is a button called, 
\begin_inset Quotes eld
\end_inset

Choose data filename
\begin_inset Quotes erd
\end_inset

.
 This button will open a file-output explorer dialogue box (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:File open dialoge box"

\end_inset

).
 From this dialogue box, the name and location of the output data can be
 chosen.
 
\series bold
If a pre-existing file is chosen, any absolute frequency/disspation and
 frequency/dissipation shift data that is collected will be overwritten
 
\bar under
unless
\bar default
 the settings associated with the output datafile is also loaded.
 
\series default
If the frequency/dissipation data was not recorded (in other words, a Lorentzian
 function was not fitted to the raw spectra data), the saved raw spectra
 curves will be added into the .mat file containing the raw spectras.
 
\series bold
However, be sure to set the correct reference time associated with the original
 output datafile.
 Otherwise, the timestamp associated with the raw spectras will be incorrect.
 
\series default
Generally, choosing a pre-exisiting file is not recommended.
 Appending new data to a pre-exisiting file can be better accomplished by
 clicking on the 
\begin_inset Quotes eld
\end_inset

Append exisiting data
\begin_inset Quotes erd
\end_inset

 button.
 This allows the user to load pre-existing data sets.
 Data collection will added to the pre-exisiting datafiles.
 For more information on how the data is stored in the output data file,
 see the section on 
\begin_inset Quotes eld
\end_inset

Loading and saving settings
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
the following figures and steps should be moved to the troubleshooting section
 for clarity and simplicity of this quick start guide section
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/file explorer dialogue box.png
	lyxscale 50
	scale 35

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
File-output explorer dialogue box.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:File open dialoge box"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
If the 
\begin_inset Quotes eld
\end_inset

settings
\begin_inset Quotes erd
\end_inset

 file associated with the output datafile does not exist, the frequency/dissipat
ion data can still be manually appended.
 To do this, follow the steps listed below:
\end_layout

\begin_layout Enumerate
Click on the 
\begin_inset Quotes eld
\end_inset

Access handles structure
\begin_inset Quotes erd
\end_inset

button.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\begin_inset Graphics
	filename Figures/access handles structure.png
	lyxscale 80
	scale 30

\end_inset


\end_layout

\begin_layout Enumerate
Go to the MATLAB Command Window and push Crtl+o buttons on the keyboard.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\begin_inset Graphics
	filename Figures/Command window with open dialogue.png
	lyxscale 40
	scale 35

\end_inset


\end_layout

\begin_layout Enumerate
Open the output datafile that was chosen previously from thefile-output
 explorer dialogue.
 This will load the variables stored in the .mat file into the MATLAB Workspace.
\end_layout

\begin_layout Enumerate
In the MATLAB Workspace, double-click on abs_freq or freq_shift
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\begin_inset Graphics
	filename Figures/workspace output file.png
	scale 70

\end_inset


\end_layout

\begin_layout Enumerate
This will open up the 
\begin_inset Quotes eld
\end_inset

Variables
\begin_inset Quotes erd
\end_inset

 dialogue box containing the data stored in the variable that was double-clicked.
 Find the row number associated with the last datapoint that was stored.
\end_layout

\begin_layout Enumerate
Go back to the Command Window and type in the following command:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset

handles.din.n=<row number associated with the last datapoint that was stored>
\begin_inset Quotes erd
\end_inset

.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset

This will tell Matlab where (based on the row number) to begin appending
 the new frequency and dissipation data.
\end_layout

\begin_layout Enumerate
Click into the Matlab Editor Window and click on the 
\begin_inset Quotes eld
\end_inset

Quit Debugging
\begin_inset Quotes erd
\end_inset

 button near the top of the window.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\begin_inset Graphics
	filename Figures/quit debugging.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Subsubsection
Loading and saving settings
\end_layout

\begin_layout Standard
The options and setting parameters can be saved.
 By clicking the 
\begin_inset Quotes eld
\end_inset

Save Settings
\begin_inset Quotes erd
\end_inset

 button, a settings file will be saved in the same path location as the
 output datafiles.
 If no output datafile was selected to begin with, the the current setting
 options and parameters will be saved in the same path directory as the
 QCM MATLAB Program.
\end_layout

\begin_layout Standard
Clicking on the 
\begin_inset Quotes eld
\end_inset

Load Settings
\begin_inset Quotes erd
\end_inset

 button will automatically load the settings file associated with output
 datafile (which is programmed to be named as 
\begin_inset Quotes eld
\end_inset

<Output Filename>_.settings.mat
\begin_inset Quotes erd
\end_inset

).
 If the automattically-loaded settings file was not the desired settings
 to be loaded, the 
\begin_inset Quotes eld
\end_inset

Load Settings
\begin_inset Quotes erd
\end_inset

 button can be clicked again to manally load the desired settings file.
 If the settings file cannot be found, an open file dialogue box will pop-up
 and the desired settings file can be loaded.
\end_layout

\begin_layout Standard
When the QCM MATLAB Program runs into any errors while loading or saving
 the setting options and parameters, the program will go into 
\begin_inset Quotes eld
\end_inset

Debugging mode
\begin_inset Quotes erd
\end_inset

.
 To exit out of the debugging mode, simply push the button that says, 
\begin_inset Quotes eld
\end_inset

Quit debugging
\begin_inset Quotes erd
\end_inset

, or type 
\begin_inset Quotes eld
\end_inset

return
\begin_inset Quotes erd
\end_inset

 in the MATLAB Command Window.
\end_layout

\begin_layout Subsection
Record scan
\end_layout

\begin_layout Standard
To begin recording the measurements, simply click on the 
\begin_inset Quotes eld
\end_inset

Record scan
\begin_inset Quotes erd
\end_inset

 button 
\begin_inset Graphics
	filename Figures/Record scan.png
	scale 80

\end_inset

.
 Details on how the measurment is recorded can be seen in the QCM MATLAB
 code.
 That secion of the code is thoroughly commented.
 Also, refer to later sections on the summary of how the MATLAB program
 records and saves the measurement scans.
\end_layout

\begin_layout Subsection
Output files
\end_layout

\begin_layout Subsubsection
No designated output filename and file location
\begin_inset CommandInset label
LatexCommand label
name "subsec:No-designated-output"

\end_inset


\end_layout

\begin_layout Standard
When no output file is designated in the 
\begin_inset Quotes eld
\end_inset

Format Output File
\begin_inset Quotes erd
\end_inset

 panel in the 
\begin_inset Quotes eld
\end_inset

Settings
\begin_inset Quotes erd
\end_inset

 section, the recorded data will be stored in the default output files:
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

fg_values.mat
\begin_inset Quotes erd
\end_inset

: This MATLAB .mat file contains frequency and dissipation information that
 was collected during the recording process.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
Variables
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
\begin_inset Quotes eld
\end_inset

abs_freq
\begin_inset Quotes erd
\end_inset

:
\series default
 (1e6)x13 double array containing the absolute frequency and dissipation
 data.
 The first column contains the timepoints.
 Columns 2, 4, 6, 8, 10, and 12 contain the absolute frequency data.
 Columns 3, 5, 7, 9, 11, and 13 contain the absolute dissipation data.
\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Quotes eld
\end_inset

freq_shift
\begin_inset Quotes erd
\end_inset

: 
\series default
(1e6)x13 double array containing the frequency and dissipation shift data.
 The first column contains the timepoints.
 Columns 2, 4, 6, 8, 10, and 12 contain the frequency shift data.
 Columns 3, 5, 7, 9, 11, and 13 contain the dissipation shift data.
\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Quotes eld
\end_inset

chi_values
\begin_inset Quotes erd
\end_inset

: 
\series default
(1e6)x3 double array containing the 
\begin_inset Formula $\chi^{2}$
\end_inset

curve fitting statistics.
 The first column contains the timepoints.
 Columns 2 and 3 contain the 
\begin_inset Formula $\chi^{2}$
\end_inset

curve fitting statistics for the conductance and susceptance data.
\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Quotes eld
\end_inset

freq_shift_ref
\begin_inset Quotes erd
\end_inset

:
\series default
 contains the reference frequency (row 1) and dissipation (row 2) values
 for the frequency and dissipation shift data.
 Columns 1, 2, 3, 4, 5, and 6 contain reference values for harmonics 1,
 3, 5, 7, 9.
 and 11.
\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Quotes eld
\end_inset

reference
\begin_inset Quotes erd
\end_inset

:
\series default
 4x1 cell array containing (in order of row index) the reference timestamp
 (yy:mm:dd:HH:MM:SS:FFF), the time in between harmonic measurements in ms,
 the number of datapoints collected in the raw spectra data, and the time
 interval in which the data was recorded in s.
\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Quotes eld
\end_inset

version
\begin_inset Quotes erd
\end_inset

:
\series default
 string variable containing information on which version of the QCM program
 was used to record the data
\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Quotes eld
\end_inset

std_fit
\begin_inset Quotes erd
\end_inset

:
\series default
 For versions 002e and higher, the estimated standard deviations of the
 Lorentz fit (a measure of the error in the Lorentz fits based on the results
 of the nlparci MATLAB function) are included.
 The first column contains the timepoints.
 Columns 2, 4, 6, 8, 10, and 12 contain the standard deviation of the resonance
 frequency.
 Columns 3, 5, 7, 9, 11, and 13 conatin the standard deviation of the dissipatio
n data.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

raw_spectras.mat
\begin_inset Quotes erd
\end_inset

: This MATLAB .mat file contains raw spectra information that was collected
 during the scan.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
Variables
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
\begin_inset Quotes eld
\end_inset

reference
\begin_inset Quotes erd
\end_inset

:
\series default
 4x1 cell array containing (in order of row index) the reference timestamp
 (yy:mm:dd:HH:MM:SS:FFF), the time in between harmonic measurements in ms,
 the number of datapoints collected in the raw spectra data, and the time
 interval in which the data was recorded in s.
\end_layout

\begin_layout Enumerate

\series bold
filename_t_<min>dot<fractional min>_iq_1_ih_<harmonic order>:
\series default
 contains the frequency (first column), conductance (second column), and
 susceptance data (third column) at time <min>.<fractional min>.
\begin_inset Foot
status open

\begin_layout Plain Layout
This format is deprecated for v002e and higher.
 However, this format can still be used by selecting the radio dial for
 
\begin_inset Quotes eld
\end_inset

Save/read spectra using legacy format
\begin_inset Quotes erd
\end_inset

 in the 
\begin_inset Quotes eld
\end_inset

Set Preferences
\begin_inset Quotes erd
\end_inset

 figure window.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Set-preferences"

\end_inset

 for details.
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Quotes eld
\end_inset

raw_spectra_<harmonic mode>
\begin_inset Quotes erd
\end_inset

: 
\series default
For versions 002e and higher, the way in which the raw spectras are saved
 has been updated.
 Raw spectras are saved in a 4-column cell format: 
\begin_inset Quotes eld
\end_inset

raw_spectra_<harmonic mode>
\begin_inset Quotes erd
\end_inset

.
 The first, second, third, and fourth column contain information of the
 timepoints, base filename, the harmonic order, and a 7-column raw spectra
 matrix, respectively.
 The first, second, and third columns, of the raw spectra matrix represent
 the frequency, raw conductance, and raw susceptance.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
Both files are located in the same path directory as the QCM MATLAB Program.
 It is important to note that these two .mat files may or may not be cleared
 before the data collection process.
 Thus, any data stores may or may not be convoluted from previous stored
 data in the .mat files.
 These two files is just a safeguard from losing data that was collected.
 If data is extracted from these two files, it is important to clear the
 data that was stored, so that future data stored in the files will not
 be convoluted with old data.
 To do this, follow these steps:
\end_layout

\begin_layout Enumerate
Go to the MATLAB Command Window and type, 
\begin_inset Quotes eld
\end_inset

clear all
\begin_inset Quotes erd
\end_inset

.
 Hit the 
\begin_inset Quotes eld
\end_inset

Enter
\begin_inset Quotes erd
\end_inset

 key.
\end_layout

\begin_layout Enumerate
In the MATLAB Command Window, type 
\begin_inset Quotes eld
\end_inset

dum=0
\begin_inset Quotes erd
\end_inset

.
 Hit the 
\begin_inset Quotes eld
\end_inset

Enter
\begin_inset Quotes erd
\end_inset

 key.
\end_layout

\begin_layout Enumerate
Click into the MATLAB Workspace and push 
\begin_inset Quotes eld
\end_inset

Crtl+o
\begin_inset Quotes erd
\end_inset

 buttons on the keyboard.
\end_layout

\begin_layout Enumerate
This will create a save prompt window.
 Save and replace both 
\begin_inset Quotes eld
\end_inset

fg_values.mat
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

raw_spectras.mat
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
If the settings are saved with no designated output file , a 
\begin_inset Quotes eld
\end_inset

default_settings.mat
\begin_inset Quotes erd
\end_inset

 file will be saved in the same path directory as the QCM MATLAB Program.
\end_layout

\begin_layout Subsubsection
Designated output filename and file location
\begin_inset CommandInset label
LatexCommand label
name "subsec:Designated-output-filename"

\end_inset


\end_layout

\begin_layout Standard
When an output filename and location are designated, the recorded data will
 be stored in the following output files:
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

<user-designated filename>.mat
\begin_inset Quotes erd
\end_inset

: This MATLAB .mat file contains frequency and dissipation information that
 was collected during the recording process.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
Variables
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

abs_freq
\begin_inset Quotes erd
\end_inset

: (1e6)x13 double array containing the absolute frequency and dissipation
 data.
 The first column contains the timepoints.
 Columns 2, 4, 6, 8, 10, and 12 contain the absolute frequency data.
 Columns 3, 5, 7, 9, 11, and 13 contain the absolute dissipation data.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

freq_shift
\begin_inset Quotes erd
\end_inset

: (1e6)x13 double array containing the frequency and dissipation shift data.
 The first column contains the timepoints.
 Columns 2, 4, 6, 8, 10, and 12 contain the frequency shift data.
 Columns 3, 5, 7, 9, 11, and 13 contain the dissipation shift data.
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

chi_values
\begin_inset Quotes erd
\end_inset

: (1e6)x3 double array containing the 
\begin_inset Formula $\chi^{2}$
\end_inset

curve fitting statistics.
 The first column contains the timepoints.
 Columns 2 and 3 contain the 
\begin_inset Formula $\chi^{2}$
\end_inset

curve fitting statistics for the conductance and susceptance data.
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

freq_shift_ref
\begin_inset Quotes erd
\end_inset

: contains the reference frequency (row 1) and dissipation (row 2) values
 for the frequency and dissipation shift data.
 Columns 1, 2, 3, 4, 5, and 6 contain reference values for harmonics 1,
 3, 5, 7, 9.
 and 11.
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

reference
\begin_inset Quotes erd
\end_inset

: 4x1 cell array containing (in order of row index) the reference timestamp
 (yy:mm:dd:HH:MM:SS:FFF), the time in between harmonic measurements in ms,
 the number of datapoints collected in the raw spectra data, and the time
 interval in which the data was recorded in s.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

<user_designated filename>_raw_spectras.mat
\begin_inset Quotes erd
\end_inset

: This MATLAB .mat file contains raw spectra information that was collected
 during the scan.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
Variables
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

reference
\begin_inset Quotes erd
\end_inset

: 4x1 cell array containing (in order of row index) the reference timestamp
 (yy:mm:dd:HH:MM:SS:FFF), the time in between harmonic measurements in ms,
 the number of datapoints collected in the raw spectra data, and the time
 interval in which the data was recorded in s.
\end_layout

\begin_layout Enumerate
filename_t_<min>dot<fractional min>_iq_1_ih_<harmonic order>: contains the
 frequency (first column), conductance (second column), and susceptance
 data (third column) at time <min>.<fractional min>.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
If a settings file was saved, 
\begin_inset Quotes eld
\end_inset

<user-designated filename>_settings.mat
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Subsection
Troubleshooting
\end_layout

\begin_layout Standard
The QCM MATLAB Program code is thoroughly commented and tested.
 If errors occur, the code can be examined and debugged.
 The easiest way to access the QCM MATLAB GUI handles structure is by pushing
 the 
\begin_inset Graphics
	filename Figures/debug.png

\end_inset

 button.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
A (more) comprehensive guide to the QCM MATLAB Program
\end_layout

\begin_layout Section
Features of the QCM MATLAB Program
\end_layout

\begin_layout Standard
This section provides a more comprehensive overview of all the features
 available in the MATLAB program.
 The basic sections of the GUI are shown in 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Figure
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/Program overview.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
GUI Overview
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Figure toolbar
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/figure toolbar.png
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A list of all of the button on the figure toolbar
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="18" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
#
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
zoom-in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
zoom-in into an axes plot
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
zoom-out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
zoom-out from an axes plot
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pan tool
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pan axes tool
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
data cursor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
select datapoints in an axes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
select raw spectra (new in v002e)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
view raw spectra corresponding to selected datapoints
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
delete datapoints mode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
enable 
\begin_inset Quotes eld
\end_inset

delete datapoints mode
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
load bare crystal data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
load reference frequencies
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
refit pre-existing raw spectras
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
this will enable the 
\begin_inset Quotes eld
\end_inset

refit mode
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
multi-peak fitting options
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
set multi-peak functions
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
save frequency shift data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
save the frequency shift data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
email notifications
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
set-up email notifications
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
plot options
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
plot options for primaryaxes1 and primaryaxes2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
set preferences
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
set-up GUI preferences
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
home
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
revert GUI state back to the default state
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MyVNA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
execute AccessMyVNA.exe
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
debugging mode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
enter into debugging mode (for advanced users only!)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
17
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
help
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
opens the pdf manual
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Short description of each button on the figure toolbar
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Zoom in/out, pan, and data cursor tool 
\begin_inset Graphics
	filename Figures/zoom_pan_cursor.png

\end_inset


\end_layout

\begin_layout Standard
These tools have the same functionality as the default zoom in/out, pan,
 and data cursor tools on a standard figure window.
\end_layout

\begin_layout Subsubsection
Select raw spectra (new in v002e Eurynomos) 
\begin_inset Graphics
	filename Figures/select_raw_spectra.png

\end_inset


\end_layout

\begin_layout Standard
Clicking on this button will activate the data cursor mode with a customized
 callback function (both the 
\begin_inset Quotes eld
\end_inset

data cursor tool
\begin_inset Quotes erd
\end_inset

 and the 
\begin_inset Quotes eld
\end_inset

select raw spectra
\begin_inset Quotes erd
\end_inset

 button will be enabled: 
\begin_inset Graphics
	filename Figures/select_raw_spectra_enabled.png

\end_inset

).
 When a datapoint is selected in the primaryaxes1 and primaryaxes2, the
 program will attempt to extract and display the associated raw spectra.
 The user will be able to refit the spectra based on the user-selected guess
 values by pushing the 
\begin_inset Quotes eld
\end_inset

Fit
\begin_inset Quotes erd
\end_inset

 push button (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Raw_spectra_refit"

\end_inset

).
 The fitting process is the same as the fitting process introduced in the
 
\begin_inset Quotes eld
\end_inset

peak centering mode
\begin_inset Quotes erd
\end_inset

 (see 
\begin_inset Note Note
status open

\begin_layout Plain Layout

\end_layout

\end_inset

 for more details).
 The user is also given the option to choose the range in which the fit
 will be performed by selecting/deslecting the 
\begin_inset Quotes eld
\end_inset

Only fit within axes span
\begin_inset Quotes erd
\end_inset

 radio button.
 When the fit is complete, information comparing the old and new Lorentz
 fit will be shown as an annotated textbox (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Raw_spectra_refit_completed"

\end_inset

).
 The user can choose to accept the new fit by pressing the 
\begin_inset Quotes eld
\end_inset

Accept
\begin_inset Quotes erd
\end_inset

 push button; this will update the selected datapoint to reflect the newly
 accepted Lorentz fit.
 However, the removal of the datapoint will not be reflected in the saved
 <base_filename>.mat file, where the fitted 
\begin_inset Formula $f$
\end_inset

 and 
\begin_inset Formula $\Gamma$
\end_inset

 values are stored.
 To permanently save the changes to the <base_filename>.mat file, the user
 must push the save button, 
\begin_inset Graphics
	filename Figures/save.png

\end_inset

 (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Save-pushbutton"

\end_inset

 for details).
\end_layout

\begin_layout Standard
Alternatively, if the raw spectra is not useable, the user can choose to
 delete the datapoint by pushing the 
\begin_inset Quotes eld
\end_inset

Remove
\begin_inset Quotes erd
\end_inset

 push button.
 This will remove the datapoint from the data arrays stored in the handles
 structure of the GUI program; the removal of the datapoint will not be
 reflected in the saved <base_filename>.mat file, where the fitted 
\begin_inset Formula $f$
\end_inset

 and 
\begin_inset Formula $\Gamma$
\end_inset

 values are stored.
 To permanently save the changes to the <base_filename>.mat file, the user
 must push the save button, 
\begin_inset Graphics
	filename Figures/save.png

\end_inset

 (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Save-pushbutton"

\end_inset

 for details).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/select_raw_spectra_refit.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The refitting window that allows the user to refit the selected raw spectra.
\begin_inset CommandInset label
LatexCommand label
name "fig:Raw_spectra_refit"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/select_raw_spectra_refit_complete.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
An example of what the refitting window looks like after a new Lorentz fit
 of the selected datapoint.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Raw_spectra_refit_completed"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Delete datapoints mode 
\begin_inset Graphics
	filename Figures/del_data.png

\end_inset


\end_layout

\begin_layout Standard
Clicking on this toggle button will put the user in the 
\begin_inset Quotes eld
\end_inset

Delete datapoints
\begin_inset Quotes erd
\end_inset

 mode.
 You will have the ability to select a datapoint graphically from the main
 plots showing the frequency and dissipation shifts.
 The selected datapoints can then be deleted by puching the 
\begin_inset Quotes eld
\end_inset

delete
\begin_inset Quotes erd
\end_inset

 button on the keyboard.
 This will temporarily remove the datapoint from the plot.
 Additional datapoints can be deleted from the plot.
 Refreshing the plot by clicking on one of the hamonic radial dials in the
 main plot panel (the radial dials that allow you to choose which harmonic
 mode to plot) will undo all deletion of datapoints.
\end_layout

\begin_layout Standard
When the 
\begin_inset Quotes eld
\end_inset

Delete datapoints
\begin_inset Quotes erd
\end_inset

 button is toggled on the 
\begin_inset Quotes eld
\end_inset

on
\begin_inset Quotes erd
\end_inset

 state, an additional button, 
\begin_inset Graphics
	filename Figures/trash_can.png

\end_inset

, will appear.
 Clicking on this 
\begin_inset Quotes eld
\end_inset

trash can
\begin_inset Quotes erd
\end_inset

 icon will permanently remove any datapoints that were deleted from the
 main plot panel.
 However, the raw spectra data associated with the datapoints will not be
 deleted.
 If a datapoint was accidentally deleted, that datapoint can be recovered
 by refitting the raw spectra, which is stored in the 
\begin_inset Quotes eld
\end_inset

<filename>_raw_spectra.mat
\begin_inset Quotes erd
\end_inset

 file.
\end_layout

\begin_layout Standard
This functionality is particularly useful when an outlier (due to poor fitting,
 etc.) causes the frequency and/or dissipation plots to zoom out, making
 graphical interpretation of the measurement proccess difficult.
 This function is NOT to be used for unethical data manipulation!
\end_layout

\begin_layout Subsubsection
Load bare crystal data 
\begin_inset Graphics
	filename Figures/bare.png

\end_inset


\end_layout

\begin_layout Standard
Since frequency and dissipation shifts are relative to a reference value,
 the reference values, which are typically values measured using a bare
 crystal, can be loaded.
 The default reference values correspond to theoretical resonance frequencies
 (5, 15, 25, etc.
 MHz) and an arbitrary dissipation value of 100 Hz.
 Clicking on this button will bring up a windows file explorer dialogue,
 asking to load the reference crystal data file, 
\begin_inset Quotes eld
\end_inset

<reference filename>.mat
\begin_inset Quotes erd
\end_inset

.
 This data file has the same format and data structure as a typical QCM
 file (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Designated-output-filename"

\end_inset

 for details).
 The program reads in the reference crystal data file and computes the average
 of the entire frequency and dissipation dataset for each harmonic.
 The average values are then used to replace the default reference values.
 The frequency and dissipation shifts measured will be adjusted accordingly.
 The plots in the main plot panel might need to be refreshed in order to
 see the changes made to the reference values.
\end_layout

\begin_layout Standard
Note that clicking on the 
\begin_inset Quotes eld
\end_inset

Home
\begin_inset Quotes erd
\end_inset

 button (
\begin_inset Graphics
	filename Figures/home.png

\end_inset

, see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Home"

\end_inset

) will reset the reference shift values back to the default values.
\end_layout

\begin_layout Subsubsection
Refit pre-existing raw spectras 
\begin_inset Graphics
	filename Figures/refit.png

\end_inset


\end_layout

\begin_layout Standard
This button will place the user in the 
\begin_inset Quotes eld
\end_inset

Refitting
\begin_inset Quotes erd
\end_inset

 mode.
 This button allows the user to load raw spectra data files and refit the
 data.
 A window file explorer dialogue will appear asking for a raw spectra file,
 
\begin_inset Quotes eld
\end_inset

<filename>_raw_spectra.mat
\begin_inset Quotes erd
\end_inset

.
 The program effectively treats the raw spectras as measurements obtained
 from the MyVNA program.
 Thus, all fitting options related to multi-peak fitting and different guess
 values will be avaialble.
 This is useful when frequency and dissipation shifts are lost and need
 to be recovered.
 Also, for situations where the measurement process used a sub-optimal single-pe
ak fitting algorithm to characterizing overlapping resonance peaks, this
 functionality allows the user to post-fit the collected data in order to
 obtain a more accurate and precise values for the frequency and dissipation
 values.
\end_layout

\begin_layout Subsubsection
Multi-peak fitting options 
\begin_inset Graphics
	filename Figures/multi_fit.png

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "subsec:Multi-peak-fitting-options"

\end_inset


\end_layout

\begin_layout Standard
This button brings up a table containing parameters related to the options
 for identifying peaks in the resonance spectra.
 The first column contains the harmonic order the parameters are associated.
 The second column contains the peak prominence sensitivity factor associated
 with the peak identification prcoess (a lower number corresponds to higher
 peak sensitivity); the values must be between 0 and 1.
 The third column contains parameters associated with the minimum peak height
 requirement relative to the datapoint with the highest y-value in the spectra
 (a lower number corresponds to higher peak sensitivity); the values must
 be between 0 and 1.
 The fourth column contains the maximum number of peaks the program will
 search in the resonance spectra; values must be between 1 and 3 (the maximum
 number of peaks is set to 3).
\end_layout

\begin_layout Subsubsection
Save frequency shift data 
\begin_inset Graphics
	filename Figures/save.png

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "subsec:Save-pushbutton"

\end_inset


\end_layout

\begin_layout Standard
This button saves the current state of the frequency and dissipation shift
 data stored in the handles structure of the GUI.
 If no filename has been designated, the data will be saved according to
 the default filenames (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:No-designated-output"

\end_inset

 for details).
\end_layout

\begin_layout Subsubsection
Email notifications 
\begin_inset Graphics
	filename Figures/email.png

\end_inset


\end_layout

\begin_layout Standard
Clicking on this button will bring up a window asking the user to input
 an email address and an option to turn on/off the email notifications.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard

\series bold
For versions 002c and below:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/email_window.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Email notification window for versions 002c and below.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
This function only stores the email information and the toggle state of
 the email notifications in the handle structure.
 When the notifications are turned on, an email will be sent (using the
 
\begin_inset Quotes eld
\end_inset

email_send
\begin_inset Quotes erd
\end_inset

 function) during the measurement process.
 The 
\begin_inset Quotes eld
\end_inset

email_send
\begin_inset Quotes erd
\end_inset

 function utilizes undocumented Javascript code.
 A screenshot of the GUI (.jpg) will be sent along with a Command Window
 log text file, QCM_diary.txt (see 
\begin_inset Quotes eld
\end_inset

Diary
\begin_inset Quotes erd
\end_inset

 function in the MATLAB help document).
 Note that the QCM_diary.txt file will continue to grow larger as more points
 are being recorded (since there are more 
\begin_inset Quotes eld
\end_inset

stuff
\begin_inset Quotes erd
\end_inset

 in the command window).
 Thus, it is advisable to clear out the QCM_diary.txt file ever once in awhile
 during a long measurement process with short measurement intervals.
 Also, if the 
\begin_inset Quotes eld
\end_inset

email_send
\begin_inset Quotes erd
\end_inset

 functions runs into an error, an error message will appear in the command
 window, but the measurement will continue (the main code is written in
 a try/catch-block).
\end_layout

\begin_layout Standard
*Note: The email notification window was revamped in version 002d_Drakon.
 The outgoing email server is no longer hard-coded into the MATLAB script.
 This change was made due to the public release of this program onto GitHub.
 The outgoing server, host email, and host email password must be designated
 in order for this option to work properly.
 Also, a 
\begin_inset Quotes eld
\end_inset

test connection
\begin_inset Quotes erd
\end_inset

 button was added to ensure succesful email notification.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard

\series bold
For versions 002d and above:
\end_layout

\begin_layout Standard
For versions 002d and above, the email host information is no longer hard-coded
 into the MATLAB program.
 Versions 002d have been released publicly; thus, for security reasons,
 email usernames and passwords were explicitely removed.
 The user now has to input the email and associated password that he/she
 wishes to use to send out email notifications.
 The email outgoing host server also needs to be provided.
\end_layout

\begin_layout Standard
A 
\begin_inset Quotes eld
\end_inset

Test connection
\begin_inset Quotes erd
\end_inset

 button has been added to test that the email communication between the
 host and recipient email had been succesfully established; a 
\begin_inset Quotes eld
\end_inset

test
\begin_inset Quotes erd
\end_inset

 email is sent between the host and recipient servers.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/email_notifications2.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Email notification window for versions 002d and above.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Plot options 
\begin_inset Graphics
	filename Figures/plot_options.png

\end_inset


\end_layout

\begin_layout Standard
This button allows the user to adjust the properties for 
\begin_inset Quotes eld
\end_inset

primaryaxes1
\begin_inset Quotes erd
\end_inset

 (top right axes) and for 
\begin_inset Quotes eld
\end_inset

primaryaxes2
\begin_inset Quotes erd
\end_inset

 (bottom right axes).
 The callback function uses the 
\begin_inset Quotes eld
\end_inset

inspect
\begin_inset Quotes erd
\end_inset

 function to provide the user access to the axes properties.
 For more information on what each axes property does, refer to the MATLAB
 help document on the 
\begin_inset Quotes eld
\end_inset

inspect
\begin_inset Quotes erd
\end_inset

 function.
\end_layout

\begin_layout Subsubsection
Set preferences 
\begin_inset Graphics
	filename Figures/set_pref.png

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "subsec:Set-preferences"

\end_inset


\end_layout

\begin_layout Standard
Clicking on this button will bring up a window with a list of preferences
 and options associated with the data collection process.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/preferences.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
User preference window.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

For versions 002c and above, the preference window is divided into four
 panels:
\end_layout

\begin_layout Enumerate
Command Window and Workspace options
\end_layout

\begin_layout Enumerate
Additional spectra fitting options
\end_layout

\begin_layout Enumerate
Fitting options
\end_layout

\begin_layout Enumerate
Set Measurement Schedule
\end_layout

\begin_layout Standard
Details of each option in the preferences can be found in associated tooltip
 string (hover the mouse pointer over the option).
\end_layout

\begin_layout Standard
The measurement scheduler is a useful tool that is designed for measurements
 that require minimal monitoring.
 A start and end time can be designated.
 Also, the measurement recording increment time can be changed; this allows
 for the user to change the measurement frequency that is appropriate for
 the time scale in which the experiment takes place.
 Be sure that the 
\begin_inset Quotes eld
\end_inset

Set Preferences
\begin_inset Quotes erd
\end_inset

 button is pushed before closing the Preferences window.
 Otherwise, the settings will not be saved!
\end_layout

\begin_layout Standard

\series bold
Note:
\series default
 Changing preferenecs must be performed when the measurement is NOT in progress.
 Otherwise, the changes in the preferences will not be set properly.
\end_layout

\begin_layout Subsubsection
Home 
\begin_inset Graphics
	filename Figures/home.png

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "subsec:Home"

\end_inset


\end_layout

\begin_layout Standard
This button resets the entire GUI back into its default state.
 All data that was collected will be deleted from the handle structure associate
d with the figure window.
\end_layout

\begin_layout Subsubsection
MyVNA 
\begin_inset Graphics
	filename Figures/myvna_button.png

\end_inset


\end_layout

\begin_layout Standard

\series bold
\emph on
\bar under
NOTE: 
\series default
\emph default
\bar default
For versions 2.0c and higher, this button is a toggle button.
 When the button is in the 
\begin_inset Quotes eld
\end_inset

on
\begin_inset Quotes erd
\end_inset

 state, both AccessMyVNA and MyVNA programs will execute.
 However, only the MyVNA GUI will appear (minimized in the desktop toolbar).
 The AccessMyVNA GUI will no longer appear.
 Instead, the execution process (AccessMyVNA.exe) can be located in the Windows
 Task Manager.
 When the button is in the 
\begin_inset Quotes eld
\end_inset

off
\begin_inset Quotes erd
\end_inset

 state, both the AccessMyVNA and MyVNA program will be terminated (forced
 termination using the cmd.exe commands).
\end_layout

\begin_layout Subsubsection
Debugging mode 
\begin_inset Graphics
	filename Figures/debug.png

\end_inset


\end_layout

\begin_layout Standard
This takes the user into debugging mode.
 The callback function uses the 
\begin_inset Quotes eld
\end_inset

keyboard
\begin_inset Quotes erd
\end_inset

 function and also exports the handle structure of the GUI into the 
\begin_inset Quotes eld
\end_inset

base
\begin_inset Quotes erd
\end_inset

 workspace.
 Note that any changes that are made will not necessarily be saved.
 For example, changes to variables (not handle objects) will not be saved
 in the handles structure unless the 
\begin_inset Quotes eld
\end_inset

guidata
\begin_inset Quotes erd
\end_inset

 function has been initiated in the command window.
 However, direct changes to handle objects (using the 
\begin_inset Quotes eld
\end_inset

set
\begin_inset Quotes erd
\end_inset

 function), will be immediately applied and saved.
 For more information on the details on how information is saved, see the
 
\begin_inset Quotes eld
\end_inset

guidata
\begin_inset Quotes erd
\end_inset

 in the MATLAB general help files.
\end_layout

\begin_layout Subsubsection
Help 
\begin_inset Graphics
	filename Figures/help.png

\end_inset


\end_layout

\begin_layout Standard
This button will direct the user to the pdf manual.
 Also, feel free to contact me through email (CHJoshuaYeh@u.northwestern.edu).
\end_layout

\begin_layout Subsection
GUI toolbar
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/GUI_toolbar.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
GUI toolbar
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
#
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Record Scan
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Start the measurement process
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Peak Centering Mode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Allows for finding the appropriate harmonics
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clear Raw Spectras
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clear all of the spectral plots
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
View Raw Figure Mode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
View each spectra in individual plots
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clear Datapoints
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Delete all frequency shift datapoints
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Short description of each button on the GUI toolbar
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Record Scan
\end_layout

\begin_layout Standard
Pushing this button starts the data collection process.
 Note that when the data acquisition process is ongoing, some of the features
 are disabled; this is to prevent unwanted errors that can lead to loss
 of data.
\end_layout

\begin_layout Subsubsection
Peak Centering Mode
\end_layout

\begin_layout Standard
Pushing this button sets the GUI into a 
\begin_inset Quotes eld
\end_inset

peak centering
\begin_inset Quotes erd
\end_inset

 mode, which allows the user to set the span for the program to scan for
 each odd harmonic resonance.
 When this mode is active, a 
\begin_inset Quotes eld
\end_inset

Center Peak
\begin_inset Quotes erd
\end_inset

 panel will display within the 
\begin_inset Quotes eld
\end_inset

Settings Panel
\begin_inset Quotes erd
\end_inset

 (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:center_peak_panel"

\end_inset

).
 Selecting the odd harmonic radio dial will allow the user to view the current
 live reading of the raw spectra, defined by the start and end frequency.
 A new figure window will appear, displaying the conductance and susceptance
 across the set frequency range (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:center_peak_fit_window"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/center_peak_panel.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The 
\begin_inset Quotes eld
\end_inset

Center Peak
\begin_inset Quotes erd
\end_inset

 panel appears within the 
\begin_inset Quotes eld
\end_inset

Settings Panel
\begin_inset Quotes erd
\end_inset

 when 
\begin_inset Quotes eld
\end_inset

Peak Centering Mode
\begin_inset Quotes erd
\end_inset

 is active.
\begin_inset CommandInset label
LatexCommand label
name "fig:center_peak_panel"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/peak_center_fit.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A figure window appears showing the electrical conductance and susceptance
 scan for the selected harmonic resonance.
\begin_inset CommandInset label
LatexCommand label
name "fig:center_peak_fit_window"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
On the right side of the figure window, as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:center_peak_fit_window"

\end_inset

, the 
\begin_inset Quotes eld
\end_inset

Span
\begin_inset Quotes erd
\end_inset

 panel allows the user to adjust the start and end frequency of the electrical
 admittance scan.
 This can be done either by pushing the increase/decrease span push buttons
 or manually inputting the width of the span in kHz (where the center of
 the span remains unchanged).
 Alternatively, the user can use the zoom in/out, data cursor
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
The data cursor allows the user to center at the corresponding frequecy
 of the selected datapoint.
 Once the datapoint is selected, click off of the datatip (but within the
 plot axes) to refresh the spectra.
\end_layout

\end_inset

, and pan tools to change the frequency scan range.
 Due to the nature of how the MATLAB GUI communicates with myVNA, a refresh
 toolbar button (
\begin_inset Graphics
	filename Figures/refresh.png

\end_inset

) was added in order to manually reload the electrical admittance frequency
 scan.
 If the spectra looks suspiciously incorrect, it is recommended to refresh
 the spectra manually.
 In addition to changing the start and end frequencies of the scan, the
 number of datapoints measured in the spectra can also be changed.
 The number of datapoints should at least be 100 (default is set to 300);
 otherwise, the Lorentz fitting will likely be inaccurate.
\end_layout

\begin_layout Paragraph
Methods for determining guess parameters
\end_layout

\begin_layout Standard
While in this mode, the different methods for determining an initial estimate
 of the Lorentz fitting parameters can be set.
 Currently there are 5 options: 
\begin_inset Quotes eld
\end_inset

Gmax
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Derivative
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Bmax
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Previous values
\begin_inset Quotes erd
\end_inset

, and 
\begin_inset Quotes eld
\end_inset

User-defined
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

Gmax
\begin_inset Quotes erd
\end_inset

: The guess parameters are based on examining the electrical conductance
 spectra, where the maximum of the conductance response represents an estimate
 of the resonance frequency.
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

Derivative
\begin_inset Quotes erd
\end_inset

: The guess parameters are based on the derivative of the complex electrical
 admittance magnitude, where the maximum of the derivative is used as an
 estimate for the resonance frequnecy.
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

Bmax
\begin_inset Quotes erd
\end_inset

: The guess parameters are determined from the electrical suscpetance spectra,
 where the maximum of the susceptance reponse represents an estimate of
 the resonance frequency.
 This method is analogous to the 
\begin_inset Quotes eld
\end_inset

Gmax
\begin_inset Quotes erd
\end_inset

 guess method.
 This is algorithm is useful when the VNA has a less-than perfect calibration,
 where the resonance response undergoes a rotation in the complex admittance
 polar plot.
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

Previous values
\begin_inset Quotes erd
\end_inset

: Guess parameters will be based on previously fitted parameters.
 This is useful for most cases when the change in the harmonic resonances
 occurs slowly.
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

User-defined
\begin_inset Quotes erd
\end_inset

: This prompts the user to manually set the guess parameters.
 Generally, this algorithm is reserved for fitting complex resonance responses,
 where multiple anharmonics are coupled with the primary harmonic mode.
\end_layout

\begin_layout Standard
Once guess parameters are set, the spectra is ready to be fitted with a
 Lorentz curve.
 To do this, push the 
\begin_inset Quotes eld
\end_inset

Fit
\begin_inset Quotes erd
\end_inset

 toolbar button (
\begin_inset Graphics
	filename Figures/fit.png

\end_inset

).
 The MATLAB program will attempt to fit the spectra using the defined guess
 parameter method.
 If the Lorentz fit fails, the MATLAB program will attempt to fit the spectra
 again using another guess parameter method.
\end_layout

\begin_layout Paragraph
Multiple anharmonic modes
\end_layout

\begin_layout Standard
To mitigate the effects of anahrmonic modes that can couple with the primary
 harmonic resonance, multiple Lorentz curves can be used to fit the primary
 and anharmonic resonances.
 To adjust how the MATLAB program detects the relevant resonance peaks,
 the 
\begin_inset Quotes eld
\end_inset

Peak finding options
\begin_inset Quotes erd
\end_inset

 toolbar button can be pushed (
\begin_inset Graphics
	filename Figures/multi_fit.png

\end_inset

).
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Multi-peak-fitting-options"

\end_inset

 for more details.
\end_layout

\begin_layout Paragraph
Peak tracking algorithm
\end_layout

\begin_layout Standard
During the measurement process, the MATLAB GUI program relies on a peak
 tracking algorithm to measure the resonance responses.
 There are 3 radio dials that can be selected: 
\begin_inset Quotes eld
\end_inset

Fix span
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Fix center
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Custom
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
Only 
\begin_inset Quotes eld
\end_inset

Fix span
\begin_inset Quotes erd
\end_inset

 is selected: The program will adjust the start and end frequencies by dynamical
ly changing the span center of the scan.
 The range of the scan remains static.
\end_layout

\begin_layout Enumerate
Only 
\begin_inset Quotes eld
\end_inset

Fix center
\begin_inset Quotes erd
\end_inset

 is selected: The program will adjust the start and end frequencies by dynamical
ly chaning the scan span.
 The span center remains static.
\end_layout

\begin_layout Enumerate
Both 
\begin_inset Quotes eld
\end_inset

Fix span
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Fix center
\begin_inset Quotes erd
\end_inset

 are selected: The program will not adjust the start and end frequencies.
 Essentially, the program will not try to track the resonance peak.
\end_layout

\begin_layout Enumerate
Only 
\begin_inset Quotes eld
\end_inset

Custom
\begin_inset Quotes erd
\end_inset

 is selected: This option allows for future developers or users to define
 their own peak tracking algorithm.
 To do this, open the m-script of the MATLAB GUI program and search for
 (crtl+f) 
\begin_inset Quotes eld
\end_inset

user-defined peak tracking
\begin_inset Quotes erd
\end_inset

.
 This should lead to the section in which users can insert their own code.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Figures/user_defined_peak_code.png
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Clear raw spectra
\end_layout

\begin_layout Standard
Clicking this will clear all of the axes in the GUI.
 Note that this does not delete any data; instead, it is useful when the
 GUI is in an akward state and the axes need to be refreshed.
\end_layout

\begin_layout Subsubsection
View raw figure mode
\end_layout

\begin_layout Standard
The raw spectra of the selected harmonics will be displayed in separate
 figure windows.
 This is useful for quickly exporting the raw spectra.
\end_layout

\begin_layout Subsubsection
Clear datapoints
\end_layout

\begin_layout Standard
This will clear all of the datapoints that was collected.
 Deleted datapoints can be manually recoved in the 
\begin_inset Quotes eld
\end_inset

deleted data
\begin_inset Quotes erd
\end_inset

 folder, which is located in the same directory as the MATLAB GUI program.
 The name of the deleted data is based on the timepoint of deletion: 
\begin_inset Quotes eld
\end_inset

<YYYYMMDD>T<hhmmss>_deleted_data.mat
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsection
Settings panel
\end_layout

\begin_layout Standard
The settings panel contains user interfaces to manipulate the harmonic scanning
 range, the time resolution between each scan, and each set of harmonic
 measurements.
 Also, basic options related the fitting process can be set in this panel.
 Further, this is the panel where the filename is designated and/or appended.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/Settings_panel.png
	width 25text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The settings panel.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
It is often useful to save the 
\begin_inset Quotes eld
\end_inset

Settings
\begin_inset Quotes erd
\end_inset

 of an experiment, so that the user is not required to re-input all of the
 experimental parameters associated with the measurement process.
 Previously saved settings can be loaded by clicking on the 
\begin_inset Quotes eld
\end_inset

Load Settings
\begin_inset Quotes erd
\end_inset

 button.
 Note that only .mat files with the 
\begin_inset Quotes eld
\end_inset

_settings
\begin_inset Quotes erd
\end_inset

 appended at the end of the filename can be used to load in the settings:
 
\begin_inset Quotes eld
\end_inset

<filename>_settings.mat
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Subsection
Raw spectra panel
\end_layout

\begin_layout Standard
The raw spectra panel contains the conductance and susceptance plots of
 each harmonic.
 Other information such as the peak tracking algorithm, the initial fitting
 guess parameters, and data resolution are included.
 The brown-orange orizontal line represent the range of data used for the
 fitting process.
 The location and peak width of the resonance peak are also plotted for
 each harmonic.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/raw_spectra_panel.png
	width 25text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The raw spectra panel.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Main plot panel
\end_layout

\begin_layout Standard
The main plot panel contains data associated with the fitted frequency and
 dissipation shifts.
 The harmonic dataset can be selected by enablin/disabling the radio dials
 in each of the subpanels.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/main_plot_panel.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The main plot panel.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Status toolbar
\end_layout

\begin_layout Standard
The status toolbar can be found at the bottom of the main GUI window.
 This toolbar reflects the current state of the program.
 When everything is running properly, the toolbar foreground and background
 should be red and black, respectively.
 When an error occurs, the foreground and background colors are black and
 red, respectively.
 Any warning messages in the status bar will have a red and yellow color
 for the foreground and background color respectively.
 This toolbar will also have other useful information such as the total
 number of datapoints that have been collected, and the most recent timepoint
 that was recorded.
 Also, a wait bar has been added in between sets of harmonic measurements
 when the 
\begin_inset Quotes eld
\end_inset

Record data
\begin_inset Quotes erd
\end_inset

 time is greater than 10 s.
 Also, the status bar will display the total number of errors the program
 encounters during the measurement process.
\end_layout

\begin_layout Section
Troubleshooting
\end_layout

\begin_layout Subsection
MyVNA
\end_layout

\begin_layout Standard
Here are some things to try and check if an error associated with MyVNA
 occurs.
\end_layout

\begin_layout Itemize
Make sure that the 
\begin_inset Quotes eld
\end_inset

servers
\begin_inset Quotes erd
\end_inset

 have been properly registered (with administrator priviledges).
 This is important in establishing communication between the AccessMyVNA
 and MyVNA programs.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Step-by-step-myVNA-installation"

\end_inset

 for more details.
\end_layout

\begin_layout Itemize
If the calibration cannot be properly loaded, it is best to redo the calibration
 process.
\end_layout

\begin_layout Subsection
AccessMyVNA
\end_layout

\begin_layout Standard
Here are some things to try and check if an error occurs in the AccessMyVNA
 program.
 Note that for version 002c and above, AccessMyVNA is hidden and runs in
 the background.
 Use the task manager to determine whether this program is actively running.
\end_layout

\begin_layout Itemize
If AccessMyVNA is running on Windows 8 or higher, ensure that compatability
 mode has been enable for Windows 7.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Step-by-step-myVNA-installation"

\end_inset

 for more details.
\end_layout

\begin_layout Itemize
Make sure that the 
\begin_inset Quotes eld
\end_inset

servers
\begin_inset Quotes erd
\end_inset

 has been properly registered.
 This is important in establishing communication between the AccessMyVNA
 and MyVNA programs.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Step-by-step-myVNA-installation"

\end_inset

 for more details.
\end_layout

\begin_layout Subsection
MATLAB GUI
\end_layout

\begin_layout Standard
When an error appears stating that MATLAB is unable to close or delete the
 GUI window, make sure that the current MATLAB working directory is the
 same in which the .m and .fig file of the GUI is located.
 This error occurs because a custom close request function for exiting the
 program was written; thus, MATLAB needs to be able to access this close
 request function.
 Alternatvely, the program can be manually closed by using the 
\begin_inset Quotes eld
\end_inset

delete
\begin_inset Quotes erd
\end_inset

 function:
\end_layout

\begin_layout Standard
\align center

\family typewriter
delete(<figure handle to GUI>)
\end_layout

\begin_layout Standard
Note that the figure handle to the GUI can be obtained with the 
\begin_inset Quotes eld
\end_inset

findall
\begin_inset Quotes erd
\end_inset

 function:
\end_layout

\begin_layout Standard
\align center

\family typewriter
findall(0,'type','figure','tag','primary1)
\end_layout

\begin_layout Part
Design overview
\end_layout

\begin_layout Section
Goal and purpose of the QCM MATLAB program
\end_layout

\begin_layout Standard
The primary goal for the developement of this program is to provide a MATLAB
 interface in obtaining QCM measurements.
 Specifically, this program has the capability to measure the location and
 half-max-half-width (HMHW) of the resonance conductance peaks.
 Based on this information, analysis can be performed (in MATLAB) on these
 measurements to extract out the viscoelastic properties of a film deposited
 on the QCM crystal.
 Currently, error bars are not explicitly calculated (only 
\begin_inset Formula $\chi^{2}$
\end_inset

values for the peak fitting is calculated); however, one can easily calculate
 error statistics since all of the raw conductance/susceptance spectra data
 is saved in a 
\begin_inset Quotes eld
\end_inset

.mat
\begin_inset Quotes erd
\end_inset

 .
\end_layout

\begin_layout Section
Hardware and software components
\end_layout

\begin_layout Subsection
Hardware
\end_layout

\begin_layout Standard
The hardware required to run the program is the N2PK Vector Network Analyzer
 (N2PK-VNA, an impedance analyzer custom built by Ivan Markarov), a crystal
 holder (Inficon, NY), and a QCM crystal (Inficon, NY).
 Further information on the N2PK-VNA hardware details can be found in http://g8k
bb.co.uk/html/myvna.html.
 An image of the setup can be seen in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:QCM hardware"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/hardware setup.jpg
	width 30text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
An image of the overall hardware setup.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:QCM hardware"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Software
\end_layout

\begin_layout Standard
The N2PK-VNA came with a proprietary software called myVNA.
 This software allows for remote access, which provides a means to control
 the N2PK-VNA hardware with a custom program.
 Currently, the program called AccessMyVNA (written in VB C++) is used to
 remote-access the impedance analyzer.
 AccessMyVNA is designed as a 
\begin_inset Quotes eld
\end_inset

middleman
\begin_inset Quotes erd
\end_inset

 or a 
\begin_inset Quotes eld
\end_inset

gateway
\begin_inset Quotes erd
\end_inset

 program for the QCM MATLAB program to communicate with the N2PK-VNA hardware.
 Details on how the programs communicate with each other is discussed in
 subsequent sections.
 To summarize, in order to collect QCM measurements with the QCM MATLAB
 program, three programs must be runnning simultaneously: 1) MyVNA, 2) AccessMyV
NA, 3) QCM MATLAB program.
 An image if each program is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-screen-shot of 3 programs"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
a) MyVNA
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/MyVNA screenshot.png
	lyxscale 50
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
b) AccessMyVNA
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/AccessMyVNA screenshot.png
	lyxscale 50
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
c) QCM MATLAB Program
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/QCM MATLAB Program screenshot.png
	lyxscale 50
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
A screen shot of each program: a) MyVNA, b) AccessMyVNA, c) QCM MATLAB Program
\begin_inset CommandInset label
LatexCommand label
name "fig:A-screen-shot of 3 programs"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Design overview of how the programs work
\end_layout

\begin_layout Standard
A general overview of how all the programs communicate with each is shown
 in flow chart in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:three program flow chart"

\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/three program flow chart.png
	lyxscale 50
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A flow chart of how the three programs communicate with each other.
\begin_inset CommandInset label
LatexCommand label
name "fig:three program flow chart"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:three program flow chart"

\end_inset

, the QCM MATLAB Program does not directly communicate with the impedance
 analyzer, instead the MATLAB program directly manipulates AccessMyVNA to
 control the impedance analyzer.
 A more detailed interaction between AccessMyVNA and the QCM MATLAB Program
 is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:AccessMyVNA and MATLAB flowchart"

\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/AccessMyVNA and QCM MATLAB Program.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A more detailed flowchart how the QCM MATLAB program communicates with AccessMyV
NA.
\begin_inset CommandInset label
LatexCommand label
name "fig:AccessMyVNA and MATLAB flowchart"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Part
MATLAB code overview
\end_layout

\begin_layout Section
Record scan algorithm explained
\end_layout

\begin_layout Standard
Since the program heavily relies on the details on how the measurement process
 is run, a section has been dedicated in explaining how the MATLAB script
 was written.
 When an unforseen error or bug occurs, this section is a good place in
 finding the origin of the problem.
\end_layout

\begin_layout Section
Index of functions
\end_layout

\begin_layout Standard
This section lists all of the functions that were written and used in the
 GUI code.
 The intent of this section is to provide a comprehensive list of each function.
 Function are group based on its type of function.
 Also note that this list corresponds to the functions used in version 002e.
\end_layout

\begin_layout Subsection
Functions that are explicitly initialized during the GUI start-up process
\end_layout

\begin_layout Standard
These functions are always initialized and 
\begin_inset Quotes eld
\end_inset

pre-made
\begin_inset Quotes erd
\end_inset

 when a GUI script is created with the MATLAB GUIDE.
 Some modifications were made to these 
\begin_inset Quotes eld
\end_inset

prewritten
\begin_inset Quotes erd
\end_inset

 functions in order to initialize default parameters properly.
\end_layout

\begin_layout Itemize

\series bold
varargout = QCM_v002d_Eurynomos(varargin)
\end_layout

\begin_layout Itemize

\series bold
QCM_<Program version>_OpeningFcn(hObject, eventdata, handles, varargin)
\end_layout

\begin_layout Itemize

\series bold
varargout = QCM_v002d_Eurynomos_OutputFcn(~, ~, handles)
\end_layout

\begin_layout Subsection
Measurement and scanning processes
\end_layout

\begin_layout Subsubsection
Settings
\end_layout

\begin_layout Itemize

\series bold
set_settings_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
write_settings(handles,harm_num)
\end_layout

\begin_layout Itemize

\series bold
save_settings_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
load_settings_Callback(hObject, ~, handles)
\end_layout

\begin_layout Subsubsection
Data acquisition
\end_layout

\begin_layout Itemize

\series bold
start_Callback(hObject, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
[freq,conductance,susceptance,handles]=read_scan(handles)
\end_layout

\begin_layout Itemize

\series bold
handles=save_data_Callback(hObject, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
maintain_myVNA_Callback(~, ~, handles)
\end_layout

\begin_layout Subsection
Plotting
\end_layout

\begin_layout Itemize

\series bold
handles=raw_fig_Callback(hObject, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot1_choice_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot2_choice_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot_primaryaxes1(handles,FG_frequency,harm_tot,n)
\end_layout

\begin_layout Itemize

\series bold
plot_primaryaxes2(handles,FG_frequency,harm_tot,n)
\end_layout

\begin_layout Itemize

\series bold
plot_1_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot_3_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot_5_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot_7_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot_9_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot_11_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot2_1_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot2_3_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot2_5_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot2_7_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot2_9_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
plot2_11_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
num_harms=primaryaxes_harm(handles)
\end_layout

\begin_layout Itemize

\series bold
num_harms=primaryaxes2_harm(handles)
\end_layout

\begin_layout Itemize

\series bold
uipushtool6_ClickedCallback
\series default
: this function uses the 
\begin_inset Quotes eld
\end_inset

inspect
\begin_inset Quotes erd
\end_inset

 function to allow manipulation of the primary axes plots 1
\end_layout

\begin_layout Itemize

\series bold
uipushtool7_ClickedCallback
\series default
: this function uses the 
\begin_inset Quotes eld
\end_inset

inspect
\begin_inset Quotes erd
\end_inset

 function to allow manipulation of the primary axes plots 2
\end_layout

\begin_layout Subsection
Fitting procedure
\end_layout

\begin_layout Itemize

\series bold
[G_fit,B_fit,G_l_sq,B_l_sq,combine_spectra,G_parameters,B_parameters,handles,I]=
\begin_inset Newline linebreak
\end_inset

Lorentzian_dynamic_fit(handles,freq,conductance,susceptance,combine_spectra)
\end_layout

\begin_layout Subsubsection
Initial guessing algorithms
\end_layout

\begin_layout Itemize

\series bold
[guess,f0,gamma0]=G_guess(freq,conductance,susceptance,handles,ylab)
\end_layout

\begin_layout Itemize

\series bold
[guess,freq_mod,modulus,f0,gamma0]=deriv_guess(freq,conductance,susceptance,hand
les)
\end_layout

\begin_layout Itemize

\series bold
flag=preview_peak_identification(freq,ydata,index,ylabel_str,handles)
\end_layout

\begin_layout Subsubsection
Lorentz fitting procedure
\end_layout

\begin_layout Itemize

\series bold
[G_fit,G_parameters,G_l_sq,B_fit,B_parameters,B_l_sq]=fit_spectra(handles,raw_da
ta,guess,I)
\end_layout

\begin_layout Itemize

\series bold
[G_parameters,B_parameters]=par_check(G_parameters,B_parameters)
\end_layout

\begin_layout Itemize

\series bold
[fitted_y,residual,parameters]=fit_spectra_con(x0,freq_data,y_data,I,show_GB,lb,
ub)
\end_layout

\begin_layout Itemize

\series bold
[fitted_y,residual,parameters]=fit_spectra_sus(x0,freq_data,susceptance_data,I,s
how_GB,lb,ub)
\end_layout

\begin_layout Itemize

\series bold
[fitted_y,residual,parameters]=fit_spectra_both(x0,freq_data,conductance,suscept
ance,num_peaks,
\begin_inset Newline linebreak
\end_inset

I,handles,lb,ub)
\end_layout

\begin_layout Itemize

\series bold
F_conductance = lfun4c(p,x) (No longer included in v002e
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Lorentz functions containing the code for the equations have been moved
 to another m-script as anonymous functions (for easy access to the codes).
 The functions can be accessed in the 
\begin_inset Quotes eld
\end_inset

AccessMyVNAv0.7
\backslash
release
\backslash
Lorentz_eqns.m
\begin_inset Quotes erd
\end_inset

 file.
\begin_inset CommandInset label
LatexCommand label
name "fn:Lorentz-functions"

\end_inset


\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize

\series bold
F_susceptance = lfun4s(p,x) (No longer included in v002e
\begin_inset script superscript

\begin_layout Plain Layout

\series bold
\begin_inset CommandInset ref
LatexCommand ref
reference "fn:Lorentz-functions"

\end_inset


\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize

\series bold
F_conductance = lfun4c_2(p,x) (No longer included in v002e
\begin_inset script superscript

\begin_layout Plain Layout

\series bold
\begin_inset CommandInset ref
LatexCommand ref
reference "fn:Lorentz-functions"

\end_inset


\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize

\series bold
F_susceptance = lfun4s_2(p,x) (No longer included in v002e
\begin_inset script superscript

\begin_layout Plain Layout

\series bold
\begin_inset CommandInset ref
LatexCommand ref
reference "fn:Lorentz-functions"

\end_inset


\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize

\series bold
F_conductance = lfun4c_3(p,x) (No longer included in v002e
\begin_inset script superscript

\begin_layout Plain Layout

\series bold
\begin_inset CommandInset ref
LatexCommand ref
reference "fn:Lorentz-functions"

\end_inset


\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize

\series bold
F_susceptance = lfun4s_3(p,x) (No longer included in v002e
\begin_inset script superscript

\begin_layout Plain Layout

\series bold
\begin_inset CommandInset ref
LatexCommand ref
reference "fn:Lorentz-functions"

\end_inset


\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize

\series bold
fcns=lfun4_both_1(p,x) (No longer included in v002e
\begin_inset script superscript

\begin_layout Plain Layout

\series bold
\begin_inset CommandInset ref
LatexCommand ref
reference "fn:Lorentz-functions"

\end_inset


\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize

\series bold
fcns=lfun4_both_2(p,x) (No longer included in v002e
\begin_inset script superscript

\begin_layout Plain Layout

\series bold
\begin_inset CommandInset ref
LatexCommand ref
reference "fn:Lorentz-functions"

\end_inset


\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize

\series bold
fcns=lfun4_both_3(p,x) (No longer included in v002e
\begin_inset script superscript

\begin_layout Plain Layout

\series bold
\begin_inset CommandInset ref
LatexCommand ref
reference "fn:Lorentz-functions"

\end_inset


\end_layout

\end_inset

)
\end_layout

\begin_layout Subsubsection
Fitting options
\end_layout

\begin_layout Itemize

\series bold
radio_chi_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
dynamic_fit_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
fit_B_radio_Callback(hObject, ~, handles)
\end_layout

\begin_layout Subsubsection
Refitting algorithm
\end_layout

\begin_layout Itemize

\series bold
refit_ClickedCallback(hObject, eventdata, handles)
\end_layout

\begin_layout Itemize

\series bold
refit_start_Callback(hObject, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
refit_inc_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
refit_end_Callback(hObject, ~, handles)
\end_layout

\begin_layout Subsubsection
Refitting selected datapoints
\end_layout

\begin_layout Itemize

\series bold
output_txt=select_spectra_fcn(hObject,event_obj)
\end_layout

\begin_layout Itemize

\series bold
refit_select_spectra(spectra,handles,harm,timepoint,index)
\end_layout

\begin_layout Itemize

\series bold
guess_method_callback(hObject,~,harm,handles)
\end_layout

\begin_layout Itemize

\series bold
rss_close(hObject,~)
\end_layout

\begin_layout Itemize

\series bold
accept(hObject,~)
\end_layout

\begin_layout Itemize

\series bold
select_spectra_fit(hObject,~,handles,f1,guess_method,spectra,harm)
\end_layout

\begin_layout Itemize

\series bold
update_tick_display(~,~,handles)
\end_layout

\begin_layout Itemize

\series bold
zoom_out_ClickedCallback(hObject, eventdata, handles)
\end_layout

\begin_layout Itemize

\series bold
zoom_in_ClickedCallback(hObject, eventdata, handles)
\end_layout

\begin_layout Itemize

\series bold
select_spectra_ClickedCallback(hObject, eventdata, handles)
\end_layout

\begin_layout Itemize

\series bold
output_txt=default_dcm(hObject,event_obj)
\end_layout

\begin_layout Subsection
Peak Centering/Tracking Functions
\end_layout

\begin_layout Itemize

\series bold
peak_centering_Callback(hObject, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
center_peak_function(handles,harm,hObject)
\end_layout

\begin_layout Itemize

\series bold
peak_center_SelectionChangeFcn(hObject, eventdata, handles)
\end_layout

\begin_layout Itemize

\series bold
store_num_data(hObject,~,handles,p)
\end_layout

\begin_layout Itemize

\series bold
span_adjust(~,~,handles,p,factor,set_span)
\end_layout

\begin_layout Itemize

\series bold
manual_set_span(~,~,handles,p,set_span)
\end_layout

\begin_layout Itemize

\series bold
peak_tracking_flag(~,~,handles,radio_handles,flag,p)
\end_layout

\begin_layout Itemize

\series bold
custom_peak_track_flag(~,~,handles,radio_handles,p)
\end_layout

\begin_layout Itemize

\series bold
store_guess_options(~,~,handles,guess_handle,p)
\end_layout

\begin_layout Itemize

\series bold
[handles]=smart_peak_tracker(handles,freq,conductance,susceptance,G_parameters)
\end_layout

\begin_layout Itemize

\series bold
handles=confirm_peak_finding(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
[handles]=peak_finding_ClickedCallback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
fpo(hObject,~,handles)
\end_layout

\begin_layout Itemize

\series bold
fp_close(hObject,~,handles,find_peak_options)
\end_layout

\begin_layout Subsubsection
Harmonic radial dial selection
\end_layout

\begin_layout Itemize

\series bold
center1_Callback(hObject, eventdata, handles)
\end_layout

\begin_layout Itemize

\series bold
center3_Callback(hObject, eventdata, handles)
\end_layout

\begin_layout Itemize

\series bold
center5_Callback(hObject, eventdata, handles)
\end_layout

\begin_layout Itemize

\series bold
center7_Callback(hObject, eventdata, handles)
\end_layout

\begin_layout Itemize

\series bold
center9_Callback(hObject, eventdata, handles)
\end_layout

\begin_layout Itemize

\series bold
center11_Callback(hObject, eventdata, handles)
\end_layout

\begin_layout Subsubsection
Toolbar buttons
\end_layout

\begin_layout Itemize

\series bold
my_closereq(~,~,handles,freq,radio_handles,guess_values_options,f1,p)
\end_layout

\begin_layout Itemize

\series bold
myL_fit(~,~,handles,p,statistics_txt)
\end_layout

\begin_layout Itemize

\series bold
refresh_button(~,~,handles,p)
\end_layout

\begin_layout Itemize

\series bold
myzoomfcn(~,~,handles,set_span,p)
\end_layout

\begin_layout Itemize

\series bold
output_txt = myupdatefcn(~,event_obj,handles,set_span,p)
\end_layout

\begin_layout Subsection
Other Callback functions
\end_layout

\begin_layout Itemize

\series bold
primary1_CloseRequestFcn(hObject, ~, handles)
\end_layout

\begin_layout Subsubsection
Settings callback functions
\end_layout

\begin_layout Itemize

\series bold
harm1_Callback(~,~,handles)
\end_layout

\begin_layout Itemize

\series bold
harm3_Callback(~,~,handles)
\end_layout

\begin_layout Itemize

\series bold
harm5_Callback(~,~,handles)
\end_layout

\begin_layout Itemize

\series bold
harm7_Callback(~,~,handles)
\end_layout

\begin_layout Itemize

\series bold
harm9_Callback(~,~,handles)
\end_layout

\begin_layout Itemize

\series bold
harm11_Callback(~,~,handles)
\end_layout

\begin_layout Itemize

\series bold
start_f1_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
end_f1_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
start_f3_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
end_f3_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
start_f5_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
end_f5_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
start_f7_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
end_f7_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
start_f9_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
end_f9_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
start_f11_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
end_f11_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
set_reference_time_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
polar_plot_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
fit_factor_Callback(hObject, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
show_susceptance_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
wait_time_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
num_datapoints_Callback(~, ~, handles)
\series default
: this function is mostly defunct
\end_layout

\begin_layout Subsubsection
GUI toolbar callback functions
\end_layout

\begin_layout Itemize

\series bold
handles=cla_raw_Callback(hObject, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
clear_datapoints_Callback(hObject, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
load_bare_ClickedCallback(hObject, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
save_shifts_ClickedCallback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
exe_vna_ClickedCallback(hObject, ~, handles)
\end_layout

\begin_layout Subsubsection
Email functions
\end_layout

\begin_layout Itemize

\series bold
email_notification_Callback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
test_email(hObject,~,handles)
\end_layout

\begin_layout Itemize

\series bold
set_email_options(hObject,~,handles,outserver,host_email,host_email_pw,txt,toggl
e_email,email)
\end_layout

\begin_layout Itemize

\series bold
toggle_func(hObject,~,handles,txt)
\end_layout

\begin_layout Itemize

\series bold
email_push_ClickedCallback(hObject, eventdata, handles)
\end_layout

\begin_layout Itemize

\series bold
email_send(handles,message)
\end_layout

\begin_layout Itemize

\series bold
handles=reset_fcn(hObject,eventdata,handles)
\end_layout

\begin_layout Itemize

\series bold
home_push_ClickedCallback(hObject, eventdata, handles)
\end_layout

\begin_layout Itemize

\series bold
del_mode_ClickedCallback(hObject, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
confirm_del_ClickedCallback(hObject, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
append_data_Callback(hObject, eventdata, handles)
\end_layout

\begin_layout Itemize

\series bold
debug_ClickedCallback(~, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
uipushtool8_ClickedCallback(~, ~, ~)
\end_layout

\begin_layout Itemize

\series bold
show_dfdg_callback(~,~,handles,show_dfdg,status)
\end_layout

\begin_layout Subsubsection
Preference functions
\end_layout

\begin_layout Itemize

\series bold
pref_ClickedCallback(hObject, ~, handles)
\end_layout

\begin_layout Itemize

\series bold
schedule_table_callback(~,callbackdata,handles,schedule_table)
\end_layout

\begin_layout Itemize

\series bold
reset_row_callback(~,~,handles,reset_row,schedule_table)
\end_layout

\begin_layout Itemize

\series bold
del_row_callback(~,~,handles,del_row,schedule_table)
\end_layout

\begin_layout Itemize

\series bold
add_row_callback(~,~,handles,add_row,schedule_table)
\end_layout

\begin_layout Itemize

\series bold
scheduler_onoff(~,~,hObject,handles,radio_on_off_schedule,schedule_table,add_row
,
\begin_inset Newline linebreak
\end_inset

del_row,reset_row,status,flag)
\end_layout

\begin_layout Itemize

\series bold
set_pref1(~,~,hObject,handles,set_pref,radio_GB_values,radio_clc_cw,radio_output
_raw,
\begin_inset Newline linebreak
\end_inset

radio_simul_peak,schedule_table,radio_on_off_schedule,show_dfdg,status,radio_dia
ry)
\end_layout

\begin_layout Subsection
Misc
\end_layout

\begin_layout Itemize

\series bold
pause_func(~,~,handles)
\end_layout

\begin_layout Itemize

\series bold
harm_tot=find_num_harms(handles)
\end_layout

\begin_layout Itemize

\series bold
check_freq_range(harm, min_range, max_range, handles)
\end_layout

\begin_layout Itemize

\series bold
refreshing(handles,harm,flag)
\end_layout

\begin_layout Itemize

\series bold
pause_func1(~,~,handles)
\end_layout

\begin_layout Itemize

\series bold
refresh_button2(~,~,handles,p)
\end_layout

\begin_layout Itemize

\series bold
num_peaks_check(~,~,num_peaks_edit)
\end_layout

\begin_layout Itemize

\series bold
my_disp(msg,color)
\end_layout

\begin_layout Itemize

\series bold
ins(hObject,~)
\end_layout

\begin_layout Section
List of versions released
\end_layout

\begin_layout Standard
Version control is managed by GitHub, under the username Shull-Research-Group.
\end_layout

\begin_layout Enumerate
version 001b
\end_layout

\begin_layout Enumerate
version001c
\end_layout

\begin_layout Enumerate
version002a
\end_layout

\begin_layout Enumerate
version002b_bigfoot
\end_layout

\begin_layout Enumerate
version002c_Cthulhu
\end_layout

\begin_layout Enumerate
version002d_Drakon
\end_layout

\begin_layout Enumerate
version002e_Eurynomos
\end_layout

\begin_layout Part
Acknowledgements
\end_layout

\begin_layout Standard
This program is heavily influenced by the many features in the QTZ.exe written
 by Diethelm Johannsmann, Institute of Physical Chemistry, TU-Clausthal,
 Germany.
 The author of this MATLAB program is very thankful for his contribution
 to the QCM community and theory.
 Further, many thanks to the members of the Shull Research Group, Northwestern
 University, and Professor Kenneth Shull for his guidance and design into
 the developement of this QCM MATLAB program.
 Also, special thanks to the N2PK VNA community for the hardware development
 of the VNA device.
 Any comments or suggestions are welcome! CHJoshuaYeh@u.northwestern.edu
\end_layout

\end_body
\end_document
